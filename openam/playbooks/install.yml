---

# TODO: in a load balanced configuration, will need lineinfile on $tools_dir$deployment_uri/bin/ssoadm
# replace:
#     com.sun.identity.cli.CommandManager "$@"
# with:
#     -D"com.iplanet.am.naming.map.site.to.server=$lb_primary_url=http://localhost:8080$deployment_uri" \
#     com.sun.identity.cli.CommandManager "$@"
# but first, bring up the lb and try without it. i think that's why it's timing out.

- name: install openam
  hosts: $hosts
  gather_facts: no

  vars_files:
    - ../vars/openam.yml

  handlers:
    - include: ../handlers/restart.yml

  tasks:

    - name: create openam config dir (to ensure it is writable by jee container)
      file: path=$base_dir
            state=directory
            owner=$container_owner
            group=$container_owner

    - name: try to transfer openam first
      copy: src=../files/openam_$version.zip
            dest=$system_artefact_dir/openam_$version.zip
      register: transfer_result
      ignore_errors: yes

    - name: otherwise, download openam
      get_url: url=$archive
               dest=$system_artefact_dir/openam_$version.zip
      when_failed: $transfer_result

    - name: unzip openam
      command: unzip -q $system_artefact_dir/openam_$version.zip -d /tmp/openam_$version
               creates=/tmp/openam_$version

    - name: unzip configurator tools
      command: unzip -q /tmp/openam_$version/openam-distribution-ssoconfiguratortools-$version.zip -d $configurator_dir
               creates=$configurator_dir

    - name: unzip admin tools
      command: unzip -q /tmp/openam_$version/openam-distribution-ssoadmintools-$version.zip -d $tools_dir
               creates=$tools_dir
      when_set: $tools

    - name: unzip diagnostic tools
      command: unzip -q /tmp/openam_$version/openam-distribution-diagnostics-$version.zip -d $diagnostics_dir
               creates=$diagnostics_dir
      when_set: $diagnostics

    - name: prepare openam configuration for first server
      template: src=../templates/openam_config_first.properties
                dest=/tmp/openam_config.properties
                mode=0400
      when_unset: $join_cluster

    - name: prepare openam configuration for subsequent servers
      template: src=../templates/openam_config_subsequent.properties
                dest=/tmp/openam_config.properties
                mode=0400
      when_set: $join_cluster

    # NOTE: we can also make $container_home writable by $container_owner, but that opens a security risk
    - name: create openam pointer dir (to ensure it is writable by container owner)
      file: path=$container_home/.openamcfg
            state=directory
            mode=0755
            owner=$container_owner
            group=$container_owner

    - name: deploy regular openam war to jee container
      command: cp /tmp/openam_$version/openam-server-$version.war $container_webapps_dir$deployment_uri.war
               creates=$container_webapps_dir$deployment_uri.war
      when_unset: $headless

    - name: deploy headless openam war to jee container
      command: cp /tmp/openam_$version/openam-server-only-$version.war $container_webapps_dir$deployment_uri.war
               creates=$container_webapps_dir$deployment_uri.war
      when_set: $headless

    - name: start jee container
      service: name=$container_service
               state=started

    - name: wait for jee container
      wait_for: port=8080
                delay=0
                timeout=120

    - name: build openam with configurator
      command: java -jar $configurator_dir/openam-distribution-configurator-$version.jar --file /tmp/openam_config.properties
               creates=$base_dir$deployment_uri

    - name: set up admin tools
      command: ./setup --path $base_dir --debug $tools_dir/debug --log $tools_dir/log
             chdir=$tools_dir
             creates=$tools_dir$deployment_uri
      when_set: $tools

    - name: clean up config file for security reasons
      file: path=/tmp/openam_config.properties
            state=absent
