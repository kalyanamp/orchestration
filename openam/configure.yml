---

# initial config for all deployments
# probably end up doing nothing here in case you mess things up -- probably just do some verification (eg. list-servers)

- hosts: ${hosts}

  vars:

    - passwd_file: /tmp/passwd.txt
    - admin_creds: --adminid amadmin --password-file ${openam_passwd_file}
    - ssoadm_bin: ${openam_tools_admin}${openam_deployment_uri}/bin/ssoadm

  tasks:

    # TODO: add/test an option for creating a site with ssoadm (corresponding to a load balancer), listing the servers with ssoadm (saving them in ansible registers), then adding each server to the site with ssoadm

    # TODO: SSL!

    # TODO: add an option for creating a datastore

    # NOTE: you can refer to the "default" server as well as individual ones

    - name: transfer password file
    # template: src=/Users/fpg/Documents/projects/cloud/templates/passwd.txt.j2
            # dest=${passwd_file}
            # mode=0400

    # - name: list servers
    # command: ${ssoadm_bin} list-servers ${admin_creds}

    - name: list server config
    # command: ${ssoadm_bin} list-server-cfg ${admin_creds} --servername ${openam_server_url}${openam_deployment_uri} --withdefaults

    # - name: enable debugging
    command: ${ssoadm_bin} update-server-cfg ${admin_creds} --servername ${openam_server_url}${openam_deployment_uri} --attributevalues "com.iplanet.services.debug.level=message"

    # TODO: delete the default embedded datastore (in top level realm or further down?)
    # ./ssoadm delete-datastores --realm /test --names embedded --adminid amadmin --password-file /tmp/pwd.txt --verbose
      
    # create a datastore from a config file

    # list-entities
    # add-cot-member
    # create-metadata-templ
    # update-entity-keyinfo

    # ./ssoadm list-cots --realm /test --adminid amadmin --password-file /tmp/pwd.txt --verbose

    # ./ssoadm import-entity --realm /test --cot vmware --meta-data-file sp_ccr.xml --adminid amadmin --password-file /tmp/pwd.txt --verbose

    # ./ssoadm list-cot-members --realm /test --cot vmware --adminid amadmin --password-file /tmp/pwd.txt --verbose

    # set attributes for entity (how?)

    - name: clean up tmp artefacts
      file: path=${passwd_file} state=absent
